{"version":3,"sources":["../../../../src/components/auth/login-form.js"],"names":["Login","event","email","password","console","log","state","preventDefault","props","requestLogin","errorMessage","handleSubmit","fields","bind","renderAlert","mapStateToProps","auth","error","form","actions"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;IAGMA,K;;;;;;;;;;;qCACWC,K,QAA4B;AAAA,gBAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,gBAAZC,QAAY,QAAZA,QAAY;;AACrCC,oBAAQC,GAAR,CAAY,2BAA2B,KAAKC,KAAL,CAAWJ,KAAlD;AACAD,kBAAMM,cAAN;;AAEA;AACA,iBAAKC,KAAL,CAAWC,YAAX,CAAwB,EAAEP,YAAF,EAASC,kBAAT,EAAxB;AACH;;;sCAEa;AACV,gBAAI,KAAKK,KAAL,CAAWE,YAAf,EAA6B;AACzB,uBACI;AAAA;AAAA,sBAAK,WAAU,oBAAf;AACI;AAAA;AAAA;AAAA;AAAA,qBADJ;AAAA;AAC4B,yBAAKF,KAAL,CAAWE;AADvC,iBADJ;AAKH;AACJ;;;iCAEO;AAAA,yBACiD,KAAKF,KADtD;AAAA,gBACIG,YADJ,UACIA,YADJ;AAAA,uCACkBC,MADlB;AAAA,gBAC4BV,KAD5B,iBAC4BA,KAD5B;AAAA,gBACmCC,QADnC,iBACmCA,QADnC;;AAEJ,mBACI;AAAA;AAAA,kBAAM,WAAU,MAAhB,EAAuB,UAAUQ,aAAa,KAAKA,YAAL,CAAkB,IAAlB,EAAwBE,IAArC,CAAjC;AACI;AAAA;AAAA,sBAAK,WAAU,UAAf;AACI;AAAA;AAAA,0BAAK,WAAU,YAAf,EAA4B,aAAY,UAAxC,EAAmD,UAAS,EAA5D;AAAA;AAEI,4EAAWX,KAAX,IAAkB,WAAU,cAA5B,EAA2C,MAAK,MAAhD,EAAuD,MAAK,OAA5D,EAAoE,aAAY,OAAhF,EAAwF,UAAS,EAAjG;AAFJ,qBADJ;AAKI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAEI,4EAAWC,QAAX,IAAqB,MAAK,UAA1B,EAAqC,WAAU,cAA/C,EAA8D,MAAK,UAAnE,EAA8E,aAAY,UAA1F,EAAqG,UAAS,EAA9G;AAFJ,qBALJ;AASK,yBAAKW,WAAL,EATL;AAUI,6DAAO,MAAK,QAAZ,EAAqB,OAAM,QAA3B;AAVJ;AADJ,aADJ;AAgBH;;;;;;AACJ;;AAED,SAASC,eAAT,CAAyBT,KAAzB,EAAgC;AAC5B,WAAO,EAAEI,cAAcJ,MAAMU,IAAN,CAAWC,KAA3B,EAAP;AACH;;kBAGc,0BAAU;AACrBC,UAAM,OADe;AAErBN,YAAQ,CAAC,OAAD,EAAU,UAAV;AAFa,CAAV,EAGZG,eAHY,EAGKI,OAHL,EAGcnB,KAHd,C","file":"login-form.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport {bindActionCreators} from 'redux';\nimport {requestLogin} from '../actions/index';\n\n\nclass Login extends Component{\n    handleSubmit(event, { email, password }) {\n        console.log('A user was logged in: ' + this.state.email);\n        event.preventDefault();\n\n        // Need to do something to log user in\n        this.props.requestLogin({ email, password });\n    }\n\n    renderAlert() {\n        if (this.props.errorMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    <strong>Oops!</strong> {this.props.errorMessage}\n                </div>\n            );\n        }\n    }\n    \n    render(){\n        const { handleSubmit, fields: { email, password }} = this.props;\n        return(\n            <form className=\"form\" onSubmit={handleSubmit(this.handleSubmit(this).bind)}>\n                <div className=\"col-md-4\">\n                    <div className=\"form-group\" placeholder=\"username\" required=\"\">\n                        Email:\n                        <input {...email} className=\"form-control\" type=\"text\" name=\"email\" placeholder=\"email\" required=\"\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        Password:\n                        <input {...password} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"password\" required=\"\"/>\n                    </div>\n                    {this.renderAlert()}\n                    <input type=\"submit\" value=\"Submit\" />\n                </div>\n            </form>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return { errorMessage: state.auth.error };\n}\n\n\nexport default reduxForm({\n    form: 'login',\n    fields: ['email', 'password']\n}, mapStateToProps, actions)(Login);"]}