{"version":3,"sources":["../../../../src/components/auth/login.js"],"names":["actions","renderInput","input","field","type","Login","email","password","console","log","props","loginUser","errorMessage","handleSubmit","handleFormSubmit","bind","renderAlert","mapStateToProps","state","form","auth"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;IAAYA,O;;;;;;;;;;;;AAEZ,IAAMC,cAAc,SAAdA,WAAc,QAAS;AAAA,QACjBC,KADiB,GACDC,KADC,CACjBD,KADiB;AAAA,QACVE,IADU,GACDD,KADC,CACVC,IADU;;AAEzB,WACI;AAAA;AAAA;AACI,4DAAWF,KAAX,IAAkB,MAAME,IAAxB,EAA8B,WAAU,cAAxC;AADJ,KADJ;AAKH,CAPD;;IASMC,K;;;;;;;;;;;+CACoC;AAAA,gBAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,gBAAZC,QAAY,QAAZA,QAAY;;AAClCC,oBAAQC,GAAR,CAAYH,KAAZ,EAAmBC,QAAnB;;AAEA,iBAAKG,KAAL,CAAWC,SAAX,CAAqB,EAACL,YAAD,EAAQC,kBAAR,EAArB;AACH;;;sCAEa;AACV,gBAAI,KAAKG,KAAL,CAAWE,YAAf,EAA6B;AACzB,uBACI;AAAA;AAAA,sBAAK,WAAU,oBAAf;AACI;AAAA;AAAA;AAAA;AAAA,qBADJ;AAAA;AAC4B,yBAAKF,KAAL,CAAWE;AADvC,iBADJ;AAKH;AACJ;;;iCAEO;AAAA,gBACIC,YADJ,GACoB,KAAKH,KADzB,CACIG,YADJ;;AAEJ,mBACI;AAAA;AAAA,kBAAM,UAAUA,aAAa,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAb,CAAhB;AACI;AAAA;AAAA,sBAAU,WAAU,YAApB;AACI;AAAA;AAAA;AAAA;AAAA,qBADJ;AAEI,sEAAO,MAAK,OAAZ,EAAqB,WAAWd,WAAhC,EAA6C,MAAK,MAAlD,EAAyD,WAAU,cAAnE;AAFJ,iBADJ;AAKI;AAAA;AAAA,sBAAU,WAAU,YAApB;AACI;AAAA;AAAA;AAAA;AAAA,qBADJ;AAEI,sEAAO,MAAK,UAAZ,EAAwB,WAAWA,WAAnC,EAAgD,MAAK,UAArD,EAAgE,WAAU,cAA1E;AAFJ,iBALJ;AASK,qBAAKe,WAAL,EATL;AAUI;AAAA;AAAA,sBAAQ,QAAO,QAAf,EAAwB,WAAU,iBAAlC;AAAA;AAAA;AAVJ,aADJ;AAcH;;;;;;AACJ;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,WAAO;AACHC,cAAMD,MAAMC,IADT;AAEHP,sBAAcM,MAAME,IAAN,CAAWR;AAFtB,KAAP;AAIH;;AAEDP,QAAQ,yBAAQY,eAAR,EAAyBjB,OAAzB,EAAkCK,KAAlC,CAAR;;AAEAA,QAAQ,0BAAU;AACdc,UAAM,OADQ;AAEdP,kBAAc;AAFA,CAAV,EAGLP,KAHK,CAAR;;kBAKeA,K","file":"login.js","sourcesContent":["import React, {Component} from 'react';\nimport { reduxForm, Field  } from 'redux-form';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nconst renderInput = field => {\n    const { input, type } = field;\n    return (\n        <div>\n            <input {...input} type={type} className=\"form-control\" />\n        </div>\n    );\n}\n\nclass Login extends Component{\n    handleFormSubmit({ email, password }) {\n        console.log(email, password);\n\n        this.props.loginUser({email, password});\n    }\n\n    renderAlert() {\n        if (this.props.errorMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    <strong>Oops!</strong> {this.props.errorMessage}\n                </div>\n            );\n        }\n    }\n    \n    render(){\n        const { handleSubmit} = this.props;\n        return(\n            <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n                <fieldset className=\"form-group\">\n                    <label>Email:</label>\n                    <Field name=\"email\"  component={renderInput} type=\"text\" className=\"form-control\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                    <label>Password:</label>\n                    <Field name=\"password\"  component={renderInput} type=\"password\" className=\"form-control\" />\n                </fieldset>\n                {this.renderAlert()}\n                <button action=\"submit\" className=\"btn btn-primary\"> Log in</button>\n            </form>\n        )\n    }\n};\n\nfunction mapStateToProps(state) {\n    return {\n        form: state.form,\n        errorMessage: state.auth.errorMessage\n    }\n}\n\nLogin = connect(mapStateToProps, actions)(Login);\n\nLogin = reduxForm({\n    form: 'login',\n    errorMessage: 'error'\n})(Login);\n\nexport default Login;"]}