{"version":3,"sources":["../../../src/containers/login-form.js"],"names":["LoginForm","props","state","email","password","onInputChange","bind","onFormSubmit","event","target","value","name","setState","console","log","preventDefault","fetchUsers","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;IAGMA,S;;;AACF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA,0HACRA,KADQ;;AAGd,cAAKC,KAAL,GAAa;AACTC,mBAAO,EADE;AAETC,sBAAU;AAFD,SAAb;;AAKA,cAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AACA,cAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AATc;AAUjB;;;;sCAEaE,K,EAAO;AACjB,gBAAMC,SAASD,MAAMC,MAArB;AACA,gBAAMC,QAAQD,OAAOC,KAArB;AACA,gBAAMC,OAAOF,OAAOE,IAApB;AACA,iBAAKC,QAAL,qBACID,IADJ,EACWD,KADX;AAGH;;;qCAEYF,K,EAAO;AAChBK,oBAAQC,GAAR,CAAY,2BAA2B,KAAKZ,KAAL,CAAWC,KAAlD;AACAK,kBAAMO,cAAN;;AAEA,iBAAKd,KAAL,CAAWe,UAAX,CAAsB,KAAKd,KAAL,CAAWQ,KAAjC;AACA,iBAAKE,QAAL,CAAc;AACVT,uBAAO,EADG;AAEVC,0BAAU;AAFA,aAAd;AAIH;;;iCAEO;AACJ,mBACI;AAAA;AAAA,kBAAM,WAAU,MAAhB,EAAuB,UAAU,KAAKG,YAAtC;AACI;AAAA;AAAA,sBAAK,WAAU,UAAf;AACI;AAAA;AAAA,0BAAK,WAAU,YAAf,EAA4B,aAAY,UAAxC,EAAmD,UAAS,EAA5D;AAAA;AAEI,iEAAO,WAAU,cAAjB,EAAgC,MAAK,MAArC,EAA4C,MAAK,OAAjD,EAAyD,OAAO,KAAKL,KAAL,CAAWC,KAA3E,EAAkF,UAAU,KAAKE,aAAjG,EAAgH,aAAY,OAA5H,EAAoI,UAAS,EAA7I;AAFJ,qBADJ;AAKI;AAAA;AAAA,0BAAK,WAAU,YAAf;AAAA;AAEI,iEAAO,MAAK,UAAZ,EAAuB,WAAU,cAAjC,EAAgD,MAAK,UAArD,EAAgE,OAAO,KAAKH,KAAL,CAAWE,QAAlF,EAA4F,UAAU,KAAKC,aAA3G,EAA0H,aAAY,UAAtI,EAAiJ,UAAS,EAA1J;AAFJ,qBALJ;AASI,6DAAO,MAAK,QAAZ,EAAqB,OAAM,QAA3B;AATJ;AADJ,aADJ;AAeH;;;;;;AACJ;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,WAAO,+BAAmB,EAACF,6BAAD,EAAnB,EAAiCE,QAAjC,CAAP;AACD;;kBAEc,yBAAQ,IAAR,EAAcD,kBAAd,EAAkCjB,SAAlC,C","file":"login-form.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {fetchUsers} from '../actions/index';\n\n\nclass LoginForm extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        };\n\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    onInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        this.setState({\n           [name]: value\n        });\n    }\n\n    onFormSubmit(event) {\n        console.log('A user was logged in: ' + this.state.email);\n        event.preventDefault();\n\n        this.props.fetchUsers(this.state.value);\n        this.setState({\n            email: '',\n            password: ''\n        })\n    }\n    \n    render(){\n        return(\n            <form className=\"form\" onSubmit={this.onFormSubmit}>\n                <div className=\"col-md-4\">\n                    <div className=\"form-group\" placeholder=\"username\" required=\"\">\n                        Email:\n                        <input className=\"form-control\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.onInputChange} placeholder=\"email\" required=\"\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        Password:\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.state.password} onChange={this.onInputChange} placeholder=\"password\" required=\"\"/>\n                    </div>\n                    <input type=\"submit\" value=\"Submit\" />\n                </div>\n            </form>\n        )\n    }\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({fetchUsers}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(LoginForm);"]}